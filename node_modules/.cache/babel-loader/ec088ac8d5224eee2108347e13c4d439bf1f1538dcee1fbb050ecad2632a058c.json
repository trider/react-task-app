{"ast":null,"code":"var _jsxFileName = \"/Users/jonnygold/Code/MVDS/react/react-task-app/src/components/state/BucketList2.js\",\n  _s = $RefreshSig$();\n// import { useState } from 'react';\nimport { useImmer } from 'use-immer';\n\n// let nextId = 3;\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialList = [{\n  id: 0,\n  title: 'Big Bellies',\n  seen: false\n}, {\n  id: 1,\n  title: 'Lunar Landscape',\n  seen: false\n}, {\n  id: 2,\n  title: 'Terracotta Army',\n  seen: true\n}];\nexport default function BucketList() {\n  _s();\n  const [myList, updateMyList] = useImmer(initialList);\n  const [yourList, updateYourList] = useImmer(initialList);\n  function handleToggleMyList(id, nextSeen) {\n    updateMyList(draft => {\n      const artwork = draft.find(a => a.id === id);\n      artwork.seen = nextSeen;\n    });\n  }\n  function handleToggleYourList(artworkId, nextSeen) {\n    updateYourList(draft => {\n      const artwork = draft.find(a => a.id === artworkId);\n      artwork.seen = nextSeen;\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Art Bucket List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My list of art to see:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ItemList, {\n      artworks: myList,\n      onToggle: handleToggleMyList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your list of art to see:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ItemList, {\n      artworks: yourList,\n      onToggle: handleToggleYourList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(BucketList, \"JFUGjw29rq1NwpaCd+M1UDQBGBw=\", false, function () {\n  return [useImmer, useImmer];\n});\n_c = BucketList;\nfunction ItemList({\n  artworks,\n  onToggle\n}) {\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: artworks.map(artwork => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: artwork.seen,\n          onChange: e => {\n            onToggle(artwork.id, e.target.checked);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), artwork.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)\n    }, artwork.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_c2 = ItemList;\nvar _c, _c2;\n$RefreshReg$(_c, \"BucketList\");\n$RefreshReg$(_c2, \"ItemList\");","map":{"version":3,"names":["useImmer","jsxDEV","_jsxDEV","Fragment","_Fragment","initialList","id","title","seen","BucketList","_s","myList","updateMyList","yourList","updateYourList","handleToggleMyList","nextSeen","draft","artwork","find","a","handleToggleYourList","artworkId","children","fileName","_jsxFileName","lineNumber","columnNumber","ItemList","artworks","onToggle","_c","map","type","checked","onChange","e","target","_c2","$RefreshReg$"],"sources":["/Users/jonnygold/Code/MVDS/react/react-task-app/src/components/state/BucketList2.js"],"sourcesContent":["// import { useState } from 'react';\nimport { useImmer } from 'use-immer';\n\n// let nextId = 3;\nconst initialList = [\n  { id: 0, title: 'Big Bellies', seen: false },\n  { id: 1, title: 'Lunar Landscape', seen: false },\n  { id: 2, title: 'Terracotta Army', seen: true },\n];\n\nexport default function BucketList() {\n  const [myList, updateMyList] = useImmer(\n    initialList\n  );\n  const [yourList, updateYourList] = useImmer(\n    initialList\n  );\n\n  function handleToggleMyList(id, nextSeen) {\n    updateMyList(draft => {\n      const artwork = draft.find(a =>\n        a.id === id\n      );\n      artwork.seen = nextSeen;\n    });\n  }\n\n  function handleToggleYourList(artworkId, nextSeen) {\n    updateYourList(draft => {\n      const artwork = draft.find(a =>\n        a.id === artworkId\n      );\n      artwork.seen = nextSeen;\n    });\n  }\n\n  return (\n    <>\n      <h1>Art Bucket List</h1>\n      <h2>My list of art to see:</h2>\n      <ItemList\n        artworks={myList}\n        onToggle={handleToggleMyList} />\n      <h2>Your list of art to see:</h2>\n      <ItemList\n        artworks={yourList}\n        onToggle={handleToggleYourList} />\n    </>\n  );\n}\n\nfunction ItemList({ artworks, onToggle }) {\n  return (\n    <ul>\n      {artworks.map(artwork => (\n        <li key={artwork.id}>\n          <label>\n            <input\n              type=\"checkbox\"\n              checked={artwork.seen}\n              onChange={e => {\n                onToggle(\n                  artwork.id,\n                  e.target.checked\n                );\n              }}\n            />\n            {artwork.title}\n          </label>\n        </li>\n      ))}\n    </ul>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}