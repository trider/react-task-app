{"ast":null,"code":"var _jsxFileName = \"/Users/jonnygold/Code/MVDS/react/react-task-app/src/components/stateManagement/Snacks.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialItems = [{\n  title: 'pretzels',\n  id: 0\n}, {\n  title: 'crispy seaweed',\n  id: 1\n}, {\n  title: 'granola bar',\n  id: 2\n}];\nexport default function Menu() {\n  _s();\n  const [items, setItems] = useState(initialItems);\n  const [selectedItem, setSelectedItem] = useState(items[2]);\n  function handleItemChange(id, e) {\n    setItems(items.map(item => {\n      if (item.id === id) {\n        return {\n          ...item,\n          title: e.target.value\n        };\n      } else {\n        return item;\n      }\n    }));\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"What's your travel snack?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: items.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: item.title,\n          onChange: e => {\n            handleItemChange(item.id, e);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setSelectedItem(item);\n          },\n          children: \"Choose\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"You picked \", selectedItem.title, \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Menu, \"1JoiqPz9TmFfRZWkzMVTd6frQ+k=\");\n_c = Menu;\nvar _c;\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","initialItems","title","id","Menu","_s","items","setItems","selectedItem","setSelectedItem","handleItemChange","e","map","item","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","index","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/jonnygold/Code/MVDS/react/react-task-app/src/components/stateManagement/Snacks.js"],"sourcesContent":["import { useState } from 'react';\n\nconst initialItems = [\n  { title: 'pretzels', id: 0 },\n  { title: 'crispy seaweed', id: 1 },\n  { title: 'granola bar', id: 2 },\n];\n\nexport default function Menu() {\n  const [items, setItems] = useState(initialItems);\n  const [selectedItem, setSelectedItem] = useState(\n    items[2]\n  );\n\n  function handleItemChange(id, e) {\n    setItems(items.map(item => {\n      if (item.id === id) {\n        return {\n          ...item,\n          title: e.target.value,\n        };\n      } else {\n        return item;\n      }\n    }));\n  }\n\n  return (\n    <>\n      <h2>What's your travel snack?</h2> \n      <ul>\n        {items.map((item, index) => (\n          <li key={item.id}>\n            <input\n              value={item.title}\n              onChange={e => {\n                handleItemChange(item.id, e)\n              }}\n            />\n            {' '}\n            <button onClick={() => {\n              setSelectedItem(item);\n            }}>Choose</button>\n          </li>\n        ))}\n      </ul>\n      <p>You picked {selectedItem.title}.</p>\n    </>\n  );\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEjC,MAAMC,YAAY,GAAG,CACnB;EAAEC,KAAK,EAAE,UAAU;EAAEC,EAAE,EAAE;AAAE,CAAC,EAC5B;EAAED,KAAK,EAAE,gBAAgB;EAAEC,EAAE,EAAE;AAAE,CAAC,EAClC;EAAED,KAAK,EAAE,aAAa;EAAEC,EAAE,EAAE;AAAE,CAAC,CAChC;AAED,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAACK,YAAY,CAAC;EAChD,MAAM,CAACO,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAC9CU,KAAK,CAAC,CAAC,CACT,CAAC;EAED,SAASI,gBAAgBA,CAACP,EAAE,EAAEQ,CAAC,EAAE;IAC/BJ,QAAQ,CAACD,KAAK,CAACM,GAAG,CAACC,IAAI,IAAI;MACzB,IAAIA,IAAI,CAACV,EAAE,KAAKA,EAAE,EAAE;QAClB,OAAO;UACL,GAAGU,IAAI;UACPX,KAAK,EAAES,CAAC,CAACG,MAAM,CAACC;QAClB,CAAC;MACH,CAAC,MAAM;QACL,OAAOF,IAAI;MACb;IACF,CAAC,CAAC,CAAC;EACL;EAEA,oBACEf,OAAA,CAAAE,SAAA;IAAAgB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,EAAI;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClCtB,OAAA;MAAAkB,QAAA,EACGV,KAAK,CAACM,GAAG,CAAC,CAACC,IAAI,EAAEQ,KAAK,kBACrBvB,OAAA;QAAAkB,QAAA,gBACElB,OAAA;UACEiB,KAAK,EAAEF,IAAI,CAACX,KAAM;UAClBoB,QAAQ,EAAEX,CAAC,IAAI;YACbD,gBAAgB,CAACG,IAAI,CAACV,EAAE,EAAEQ,CAAC,CAAC;UAC9B;QAAE;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,EACD,GAAG,eACJtB,OAAA;UAAQyB,OAAO,EAAEA,CAAA,KAAM;YACrBd,eAAe,CAACI,IAAI,CAAC;UACvB,CAAE;UAAAG,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAVXP,IAAI,CAACV,EAAE;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAWZ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACLtB,OAAA;MAAAkB,QAAA,GAAG,aAAW,EAACR,YAAY,CAACN,KAAK,EAAC,GAAC;IAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA,eACvC,CAAC;AAEP;AAACf,EAAA,CAzCuBD,IAAI;AAAAoB,EAAA,GAAJpB,IAAI;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}