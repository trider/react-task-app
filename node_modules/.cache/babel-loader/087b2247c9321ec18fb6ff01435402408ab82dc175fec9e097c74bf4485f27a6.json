{"ast":null,"code":"var _jsxFileName = \"/Users/jonnygold/Code/MVDS/react/react-task-app/src/components/stateManagement/places/TravelPlan.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { initialTravelPlan } from './places.js';\nimport './places.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TravelPlan() {\n  _s();\n  const [plan, setPlan] = useState(initialTravelPlan);\n  function handleComplete(parentId, childId) {\n    const parent = plan[parentId];\n    // Create a new version of the parent place\n    // that doesn't include this child ID.\n    const nextParent = {\n      ...parent,\n      childIds: parent.childIds.filter(id => id !== childId)\n    };\n    // Update the root state object...\n    setPlan({\n      ...plan,\n      // ...so that it has the updated parent.\n      [parentId]: nextParent\n    });\n  }\n  const root = plan[0];\n  const planetIds = root.childIds;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Places to visit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: planetIds.map(id => /*#__PURE__*/_jsxDEV(PlaceTree, {\n        id: id,\n        parentId: 0,\n        placesById: plan,\n        onComplete: handleComplete\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(TravelPlan, \"IkiTm5lcPrCI/rlS/X1a+e/J8G4=\");\n_c = TravelPlan;\nfunction PlaceTree({\n  id,\n  parentId,\n  placesById,\n  onComplete\n}) {\n  const place = placesById[id];\n  const childIds = place.childIds;\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [place.title, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        onComplete(parentId, id);\n      },\n      children: \"Complete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), childIds.length > 0 && /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: childIds.map(childId => /*#__PURE__*/_jsxDEV(PlaceTree, {\n        id: childId,\n        parentId: id,\n        placesById: placesById,\n        onComplete: onComplete\n      }, childId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_c2 = PlaceTree;\nvar _c, _c2;\n$RefreshReg$(_c, \"TravelPlan\");\n$RefreshReg$(_c2, \"PlaceTree\");","map":{"version":3,"names":["useState","initialTravelPlan","jsxDEV","_jsxDEV","Fragment","_Fragment","TravelPlan","_s","plan","setPlan","handleComplete","parentId","childId","parent","nextParent","childIds","filter","id","root","planetIds","children","fileName","_jsxFileName","lineNumber","columnNumber","map","PlaceTree","placesById","onComplete","_c","place","title","onClick","length","_c2","$RefreshReg$"],"sources":["/Users/jonnygold/Code/MVDS/react/react-task-app/src/components/stateManagement/places/TravelPlan.js"],"sourcesContent":["import { useState } from 'react';\nimport { initialTravelPlan } from './places.js';\nimport './places.css';\n\nexport default function TravelPlan() {\n  const [plan, setPlan] = useState(initialTravelPlan);\n\n  function handleComplete(parentId, childId) {\n    const parent = plan[parentId];\n    // Create a new version of the parent place\n    // that doesn't include this child ID.\n    const nextParent = {\n      ...parent,\n      childIds: parent.childIds\n        .filter(id => id !== childId)\n    };\n    // Update the root state object...\n    setPlan({\n      ...plan,\n      // ...so that it has the updated parent.\n      [parentId]: nextParent\n    });\n  }\n\n  const root = plan[0];\n  const planetIds = root.childIds;\n  return (\n    <>\n      <h2>Places to visit</h2>\n      <ol>\n        {planetIds.map(id => (\n          <PlaceTree\n            key={id}\n            id={id}\n            parentId={0}\n            placesById={plan}\n            onComplete={handleComplete}\n          />\n        ))}\n      </ol>\n    </>\n  );\n}\n\nfunction PlaceTree({ id, parentId, placesById, onComplete }) {\n  const place = placesById[id];\n  const childIds = place.childIds;\n  return (\n    <li>\n      {place.title}\n      <button onClick={() => {\n        onComplete(parentId, id);\n      }}>\n        Complete\n      </button>\n      {childIds.length > 0 &&\n        <ol>\n          {childIds.map(childId => (\n            <PlaceTree\n              key={childId}\n              id={childId}\n              parentId={id}\n              placesById={placesById}\n              onComplete={onComplete}\n            />\n          ))}\n        </ol>\n      }\n    </li>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}