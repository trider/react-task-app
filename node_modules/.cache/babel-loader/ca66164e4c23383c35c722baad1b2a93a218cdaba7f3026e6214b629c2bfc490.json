{"ast":null,"code":"var _jsxFileName = \"/Users/jonnygold/Code/MVDS/react/react-task-app/src/components/state/Replace.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet initialCounters = [0, 0, 0];\nexport default function CounterList() {\n  _s();\n  const [counters, setCounters] = useState(initialCounters);\n  function handleIncrementClick(index) {\n    const nextCounters = counters.map((c, i) => {\n      if (i === index) {\n        // Increment the clicked counter\n        return c + 1;\n      } else {\n        // The rest haven't changed\n        return c;\n      }\n    });\n    setCounters(nextCounters);\n  }\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: counters.map((counter, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [counter, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          handleIncrementClick(i);\n        },\n        children: \"+1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(CounterList, \"c7kdW8lsfSixuq/hAy5xdIPFZdg=\");\n_c = CounterList;\nvar _c;\n$RefreshReg$(_c, \"CounterList\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","initialCounters","CounterList","_s","counters","setCounters","handleIncrementClick","index","nextCounters","map","c","i","children","counter","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jonnygold/Code/MVDS/react/react-task-app/src/components/state/Replace.js"],"sourcesContent":["import { useState } from 'react';\n\nlet initialCounters = [\n  0, 0, 0\n];\n\nexport default function CounterList() {\n  const [counters, setCounters] = useState(\n    initialCounters\n  );\n\n  function handleIncrementClick(index) {\n    const nextCounters = counters.map((c, i) => {\n      if (i === index) {\n        // Increment the clicked counter\n        return c + 1;\n      } else {\n        // The rest haven't changed\n        return c;\n      }\n    });\n    setCounters(nextCounters);\n  }\n\n  return (\n    <ul>\n      {counters.map((counter, i) => (\n        <li key={i}>\n          {counter}\n          <button onClick={() => {\n            handleIncrementClick(i);\n          }}>+1</button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,IAAIC,eAAe,GAAG,CACpB,CAAC,EAAE,CAAC,EAAE,CAAC,CACR;AAED,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACpC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CACtCG,eACF,CAAC;EAED,SAASK,oBAAoBA,CAACC,KAAK,EAAE;IACnC,MAAMC,YAAY,GAAGJ,QAAQ,CAACK,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MAC1C,IAAIA,CAAC,KAAKJ,KAAK,EAAE;QACf;QACA,OAAOG,CAAC,GAAG,CAAC;MACd,CAAC,MAAM;QACL;QACA,OAAOA,CAAC;MACV;IACF,CAAC,CAAC;IACFL,WAAW,CAACG,YAAY,CAAC;EAC3B;EAEA,oBACER,OAAA;IAAAY,QAAA,EACGR,QAAQ,CAACK,GAAG,CAAC,CAACI,OAAO,EAAEF,CAAC,kBACvBX,OAAA;MAAAY,QAAA,GACGC,OAAO,eACRb,OAAA;QAAQc,OAAO,EAAEA,CAAA,KAAM;UACrBR,oBAAoB,CAACK,CAAC,CAAC;QACzB,CAAE;QAAAC,QAAA,EAAC;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GAJPP,CAAC;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKN,CACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAET;AAACf,EAAA,CA9BuBD,WAAW;AAAAiB,EAAA,GAAXjB,WAAW;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}