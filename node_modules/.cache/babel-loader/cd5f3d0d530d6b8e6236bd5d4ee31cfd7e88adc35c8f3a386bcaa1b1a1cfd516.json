{"ast":null,"code":"var _jsxFileName = \"/Users/jonnygold/Code/MVDS/react/react-task-app/src/components/state/Transform.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet initialShapes = [{\n  id: 0,\n  type: 'circle',\n  x: 50,\n  y: 100\n}, {\n  id: 1,\n  type: 'square',\n  x: 150,\n  y: 100\n}, {\n  id: 2,\n  type: 'square',\n  x: 250,\n  y: 100\n}];\nexport default function ShapeEditor() {\n  _s();\n  const [shapes, setShapes] = useState(initialShapes);\n  function handleClick() {\n    const nextShapes = shapes.map(shape => {\n      if (shape.type === 'square') {\n        // No change\n        return shape;\n      } else {\n        // Return a new circle 50px below\n        return {\n          ...shape,\n          y: shape.y + 50\n        };\n      }\n    });\n    // Re-render with the new array\n    setShapes(nextShapes);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Move circles down!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), shapes.map(shape => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: 'purple',\n        position: 'absolute',\n        left: shape.x,\n        top: shape.y,\n        borderRadius: shape.type === 'circle' ? '50%' : '',\n        width: 20,\n        height: 20\n      }\n    }, shape.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n}\n_s(ShapeEditor, \"L9yGHPKUlu2TLL3zMIv0KwdtW9c=\");\n_c = ShapeEditor;\nvar _c;\n$RefreshReg$(_c, \"ShapeEditor\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","initialShapes","id","type","x","y","ShapeEditor","_s","shapes","setShapes","handleClick","nextShapes","map","shape","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","style","background","position","left","top","borderRadius","width","height","_c","$RefreshReg$"],"sources":["/Users/jonnygold/Code/MVDS/react/react-task-app/src/components/state/Transform.js"],"sourcesContent":["import { useState } from 'react';\n\nlet initialShapes = [\n  { id: 0, type: 'circle', x: 50, y: 100 },\n  { id: 1, type: 'square', x: 150, y: 100 },\n  { id: 2, type: 'square', x: 250, y: 100 },\n];\n\nexport default function ShapeEditor() {\n  const [shapes, setShapes] = useState(\n    initialShapes\n  );\n\n  function handleClick() {\n    const nextShapes = shapes.map(shape => {\n      if (shape.type === 'square') {\n        // No change\n        return shape;\n      } else {\n        // Return a new circle 50px below\n        return {\n          ...shape,\n          y: shape.y + 50,\n        };\n      }\n    });\n    // Re-render with the new array\n    setShapes(nextShapes);\n  }\n\n  return (\n    <>\n      <button onClick={handleClick}>\n        Move circles down!\n      </button>\n      {shapes.map(shape => (\n        <div\n          key={shape.id}\n          style={{\n          background: 'purple',\n          position: 'absolute',\n          left: shape.x,\n          top: shape.y,\n          borderRadius:shape.type === 'circle' ? '50%' : '',\n          width: 20,\n          height: 20,\n        }} />\n      ))}\n    </>\n  );\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEjC,IAAIC,aAAa,GAAG,CAClB;EAAEC,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,QAAQ;EAAEC,CAAC,EAAE,EAAE;EAAEC,CAAC,EAAE;AAAI,CAAC,EACxC;EAAEH,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,QAAQ;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE;AAAI,CAAC,EACzC;EAAEH,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,QAAQ;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE;AAAI,CAAC,CAC1C;AAED,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACpC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAClCK,aACF,CAAC;EAED,SAASS,WAAWA,CAAA,EAAG;IACrB,MAAMC,UAAU,GAAGH,MAAM,CAACI,GAAG,CAACC,KAAK,IAAI;MACrC,IAAIA,KAAK,CAACV,IAAI,KAAK,QAAQ,EAAE;QAC3B;QACA,OAAOU,KAAK;MACd,CAAC,MAAM;QACL;QACA,OAAO;UACL,GAAGA,KAAK;UACRR,CAAC,EAAEQ,KAAK,CAACR,CAAC,GAAG;QACf,CAAC;MACH;IACF,CAAC,CAAC;IACF;IACAI,SAAS,CAACE,UAAU,CAAC;EACvB;EAEA,oBACEb,OAAA,CAAAE,SAAA;IAAAc,QAAA,gBACEhB,OAAA;MAAQiB,OAAO,EAAEL,WAAY;MAAAI,QAAA,EAAC;IAE9B;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACRX,MAAM,CAACI,GAAG,CAACC,KAAK,iBACff,OAAA;MAEEsB,KAAK,EAAE;QACPC,UAAU,EAAE,QAAQ;QACpBC,QAAQ,EAAE,UAAU;QACpBC,IAAI,EAAEV,KAAK,CAACT,CAAC;QACboB,GAAG,EAAEX,KAAK,CAACR,CAAC;QACZoB,YAAY,EAACZ,KAAK,CAACV,IAAI,KAAK,QAAQ,GAAG,KAAK,GAAG,EAAE;QACjDuB,KAAK,EAAE,EAAE;QACTC,MAAM,EAAE;MACV;IAAE,GATKd,KAAK,CAACX,EAAE;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASX,CACL,CAAC;EAAA,eACF,CAAC;AAEP;AAACZ,EAAA,CA1CuBD,WAAW;AAAAsB,EAAA,GAAXtB,WAAW;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}