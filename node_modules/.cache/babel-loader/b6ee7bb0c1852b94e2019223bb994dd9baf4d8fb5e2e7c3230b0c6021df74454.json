{"ast":null,"code":"var _jsxFileName = \"/Users/jonnygold/Code/MVDS/react/react-task-app/src/components/stateManagement/TasksContext/TaskList.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, useContext } from 'react';\nimport { TasksContext, TasksDispatchContext } from './TasksContext.js';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TaskList() {\n  _s();\n  const tasks = useContext(TasksContext);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(Task, {\n        task: task\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }, this)\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskList, \"OoxjJOWkcXv7APl5icaQx985KJg=\");\n_c = TaskList;\nfunction Task({\n  task\n}) {\n  _s2();\n  const [isEditing, setIsEditing] = useState(false);\n  const dispatch = useContext(TasksDispatchContext);\n  let taskContent;\n  if (isEditing) {\n    taskContent = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: task.text,\n        onChange: e => {\n          dispatch({\n            type: 'changed',\n            task: {\n              ...task,\n              text: e.target.value\n            }\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsEditing(false),\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  } else {\n    taskContent = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [task.text, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsEditing(true),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: task.done,\n      onChange: e => {\n        dispatch({\n          type: 'changed',\n          task: {\n            ...task,\n            done: e.target.checked\n          }\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), taskContent, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        dispatch({\n          type: 'deleted',\n          id: task.id\n        });\n      },\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s2(Task, \"nE8DyHbXV4ZFutRyBjl+ihEtyNU=\");\n_c2 = Task;\nvar _c, _c2;\n$RefreshReg$(_c, \"TaskList\");\n$RefreshReg$(_c2, \"Task\");","map":{"version":3,"names":["useState","useContext","TasksContext","TasksDispatchContext","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskList","_s","tasks","children","map","task","Task","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","_s2","isEditing","setIsEditing","dispatch","taskContent","value","text","onChange","e","type","target","onClick","checked","done","_c2","$RefreshReg$"],"sources":["/Users/jonnygold/Code/MVDS/react/react-task-app/src/components/stateManagement/TasksContext/TaskList.js"],"sourcesContent":["import { useState, useContext } from 'react';\nimport { TasksContext, TasksDispatchContext } from './TasksContext.js';\n\nexport default function TaskList() {\n  const tasks = useContext(TasksContext);\n  return (\n    <ul>\n      {tasks.map(task => (\n        <li key={task.id}>\n          <Task task={task} />\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nfunction Task({ task }) {\n  const [isEditing, setIsEditing] = useState(false);\n  const dispatch = useContext(TasksDispatchContext);\n  let taskContent;\n  if (isEditing) {\n    taskContent = (\n      <>\n        <input\n          value={task.text}\n          onChange={e => {\n            dispatch({\n              type: 'changed',\n              task: {\n                ...task,\n                text: e.target.value\n              }\n            });\n          }} />\n        <button onClick={() => setIsEditing(false)}>\n          Save\n        </button>\n      </>\n    );\n  } else {\n    taskContent = (\n      <>\n        {task.text}\n        <button onClick={() => setIsEditing(true)}>\n          Edit\n        </button>\n      </>\n    );\n  }\n  return (\n    <label>\n      <input\n        type=\"checkbox\"\n        checked={task.done}\n        onChange={e => {\n          dispatch({\n            type: 'changed',\n            task: {\n              ...task,\n              done: e.target.checked\n            }\n          });\n        }}\n      />\n      {taskContent}\n      <button onClick={() => {\n        dispatch({\n          type: 'deleted',\n          id: task.id\n        });\n      }}>\n        Delete\n      </button>\n    </label>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}